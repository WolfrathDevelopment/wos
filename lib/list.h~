/*
 * list.h
 * Wolfrath/Kriewall, 2013
 *
 * Generic linked list header
 */

#ifndef LIST_H
#define LIST_H

#include "../types.h"

struct w_listnode{
	struct w_listnode* next;
};

#define LINKED_LIST_MEMBER(x) struct w_listnode x

#define INIT_LIST_HEAD(x) x->next = NULL

#define list_entry(ptr, type, member) \
((type *)((char *)(ptr) â€“ (unsigned long)(&((type *)0)->member)))

void list_add(struct w_listnode**, struct w_listnode*);
struct w_listnode* list_remove(struct w_listnode**, struct w_listnode*);
list_entry(struct w_listnode *ptr, type_of_struct, field_name);

#endif
